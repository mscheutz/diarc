cmake_minimum_required(VERSION 2.8)
project(FloorSupport)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-as-needed")
ADD_DEFINITIONS(-fPIC)
ADD_DEFINITIONS(-Werror=return-type)
ADD_DEFINITIONS(-DBOOST_FILESYSTEM_DEPRECATED)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --std=gnu++11 -D_GLIBCXX_USE_CXX11_ABI=0")
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++0x -D_GLIBCXX_USE_CXX11_ABI=0")

# Java (required)
FIND_PACKAGE( Java REQUIRED )
INCLUDE_DIRECTORIES(${JAVA_INCLUDE_DIRS})
# JNI (required)
FIND_PACKAGE( JNI REQUIRED )
INCLUDE_DIRECTORIES(${JNI_INCLUDE_DIRS})
# Boost
FIND_PACKAGE( Boost REQUIRED )
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
# OpenCV (required)
FIND_PACKAGE( OpenCV REQUIRED )
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
# SWIG (required)
FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(UseSWIG)
# Aldebaran naoqi libraries -- ${nao.sdk.dir} defined in build.properties and
# passed in via ant
FIND_LIBRARY(NAO_LIBRARIES NAMES alvision PATHS ${NAO_SDK_DIR}/lib)
INCLUDE_DIRECTORIES(${NAO_SDK_DIR}/include)

SET(SWIG_SRC_OUTDIR ${CMAKE_BINARY_DIR}/../../swig)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

file(GLOB sources_files "*.cpp")
set  (SOURCES ${sources_files})

# Generate SWIG files
ADD_SUBDIRECTORY(swig)

# Build shared library
ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Boost_LIBRARIES} ${OpenCV_LIBS} ${NAO_LIBRARIES} FloorSupport_swig)
